{"version":3,"sources":["component/images/todo.png","component/todoproject/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","newEditItem","find","console","log","editItem","index","updateditems","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,MAA0B,iC,eC8G1BA,EAzGF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACZ,GAAKR,EAEE,GAAIA,IAAcI,EACrBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAKC,KAAOL,EACL,2BAAKI,GAAZ,IAAkBE,KAAMZ,IAErBU,MAGfL,GAAgB,GAChBJ,EAAa,IACbM,EAAc,UACX,CACH,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMZ,GAClEG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SAhBbgB,MAAM,kBA+Cd,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,sEAGJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,sBAC3BC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOzB,EAAayB,EAAEC,OAAOH,UAGvCpB,EAAe,mBAAGc,UAAU,qBAAqBU,MAAM,WAAWC,QAASrB,IACvE,mBAAGU,UAAU,sBAAsBU,MAAM,cAAcC,QAASrB,OAI5E,qBAAKU,UAAU,YAAf,SAGQhB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKQ,UAAU,WAAf,UACI,6BAAKR,EAAKE,OACV,sBAAKM,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBU,MAAM,YAAYC,QAAS,kBA5CrF,SAAClB,GACd,IAAImB,EAAc5B,EAAM6B,MAAK,SAACrB,GAC1B,OAAOA,EAAKC,KAAOA,KAEvBqB,QAAQC,IAAIH,GAEZzB,GAAgB,GAChBJ,EAAa6B,EAAYlB,MACzBL,EAAcI,GAoC0FuB,CAASxB,EAAKC,OAClF,mBAAGO,UAAU,2BAA2BU,MAAM,cAAcC,QAAS,kBAtD1F,SAACM,GAChB,IAAMC,EAAelC,EAAMmC,QAAO,SAAC3B,GAC/B,OAAOyB,IAAUzB,EAAKC,MAE1BR,EAASiC,GAkDsGE,CAAW5B,EAAKC,YAJpED,EAAKC,SAcpD,qBAAKO,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAeqB,oBAAkB,aAAaV,QA5ClE,WACd1B,EAAS,KA2CO,SAAoF,4DCrC7FqC,MARf,WACE,OACI,mCACI,cAAC,EAAD,OC/CKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7087165.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.8705769b.png\";","// 🔴 Updated TODO LIST App with Add, Delete, Edit, LocalStorage using React and Hooks\r\nimport React, { useState } from 'react';\r\nimport todo from '../images/todo.png';\r\nimport './App.css';\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('plz fill data');\r\n        } else if (inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: inputData };\r\n                    }\r\n                    return elem;\r\n                })\r\n            );\r\n            setToggleSubmit(true);\r\n            setInputData(\"\");\r\n            setIsEditItem(null);\r\n        } else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    };\r\n\r\n    //delete the items\r\n\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n        setItems(updateditems);\r\n    };\r\n\r\n    //edit the item\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        console.log(newEditItem);\r\n\r\n        setToggleSubmit(false);\r\n        setInputData(newEditItem.name);\r\n        setIsEditItem(id);\r\n    };\r\n\r\n    //remove all\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={todo} alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here ✌</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Items...\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem} ></i> :\r\n                                <i className=\"far fa-edit add-btn\" title=\"Update Item\" onClick={addItem} ></i>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)} ></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)} ></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    {/* clear all button */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span> CHECK LIST </span></button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//🔴 Build Awesome Todo App With REACT Using Hooks\r\n// import React, { useState } from 'react';\r\n// import todo from '../images/todo.png';\r\n// import '../App.css';\r\n\r\n// const Todo = () => {\r\n\r\n//     const [inputData, setInputData] = useState('');\r\n//     const [items, setItems] = useState([]);\r\n\r\n//     const addItem = () => {\r\n//         if (!inputData) {\r\n\r\n//         } else {\r\n//             setItems([...items, inputData]);\r\n//             setInputData(\"\");\r\n//         }\r\n//     };\r\n\r\n//     //delete the items\r\n\r\n//     const deleteItem = (id) => {\r\n//         console.log(id);\r\n//         const updateditems = items.filter((elem, ind) => {\r\n//             return ind !== id;\r\n//         });\r\n//         setItems(updateditems);\r\n//     };\r\n\r\n//     //remove all\r\n//     const removeAll = () => {\r\n//         setItems([]);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"main-div\">\r\n//                 <div className=\"child-div\">\r\n//                     <figure>\r\n//                         <img src={todo} alt=\"todologo\" />\r\n//                         <figcaption>Add Your List Here ✌</figcaption>\r\n//                     </figure>\r\n\r\n//                     <div className=\"addItems\">\r\n//                         <input type=\"text\" placeholder=\"✍ Add Items...\"\r\n//                             value={inputData}\r\n//                             onChange={(e) => setInputData(e.target.value)}\r\n//                         />\r\n//                         <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem} ></i>\r\n//                     </div>\r\n\r\n//                     <div className=\"showItems\">\r\n\r\n//                         {\r\n//                             items.map((elem, ind) => {\r\n//                                 return (\r\n//                                     <div className=\"eachItem\" key={ind}>\r\n//                                         <h3>{elem}</h3>\r\n//                                         <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(ind)} ></i>\r\n//                                     </div>\r\n//                                 )\r\n//                             })\r\n//                         }\r\n\r\n//                     </div>\r\n\r\n//                     {/* clear all button */}\r\n//                     <div className=\"showItems\">\r\n//                         <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span> CHECK LIST </span></button>\r\n//                     </div>\r\n\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Todo;","// //🔴 Create Awesome Portfolio Filter Image Gallery in React JS\n// import React from 'react';\n// import GalleryReact from './component/TabMenu/GalleryReact';\n// // import Todo from './component/todoproject/todo';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// function App() {\n//   return (\n//       <>\n//           <GalleryReact />\n//       </>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// 🔴 Updated TODO LIST App with Add, Delete, Edit, LocalStorage using React and Hooks\nimport React from 'react';\nimport Todo from './component/todoproject/todo';\n\nfunction App() {\n  return (\n      <>\n          <Todo />\n      </>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//🔴 Build Awesome Todo App With REACT Using Hooks\n// import React from 'react';\n// import Todo from './component/todo';\n\n// function App() {\n//   return (\n//       <>\n//           <Todo />\n//       </>\n//   );\n// }\n\n// export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// 🔴 Updated TODO LIST App with Add, Delete, Edit, LocalStorage using React and Hooks\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//🔴 Build Awesome Todo App With REACT Using Hooks\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}